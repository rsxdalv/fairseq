name: Build Wheels for All Platforms

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-mac:
    strategy:
      max-parallel: 4
      matrix:
        platform: [macos-14]
        python-version: ["3.10", "3.11"]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install locally
        run: |
          python -m pip install torch==2.6.0
          python -m pip install --upgrade pip==23.3.2
          python -m pip install wheel ninja delocate
          brew install llvm libomp

      - name: Install Deps
        run: python -m pip install .

      - name: Build the wheel
        run: ARCHFLAGS="-arch arm64" python setup.py bdist_wheel -d dist/

      - name: Check the wheel
        run: delocate-listdeps dist/*.whl

      - run: du -h dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: mac-python-${{ matrix.python-version }}-wheels
          path: dist/*.whl

  build-linux:
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.10", "3.11"]
        include:
          - python-version: "3.10"
            cp_tag: "cp310-cp310"
          - python-version: "3.11"
            cp_tag: "cp311-cp311"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pull Manylinux Docker Image
        run: docker pull quay.io/pypa/manylinux2014_x86_64

      - name: Build Wheels in Manylinux
        run: |
          docker run --rm \
            -v $(pwd):/io \
            quay.io/pypa/manylinux2014_x86_64 \
            /bin/bash -c "
            unlink /usr/bin/python || true &&
            ln -s /opt/python/${{ matrix.cp_tag }}/bin/python /usr/bin/python &&
            unlink /usr/bin/pip || true &&
            ln -s /opt/python/${{ matrix.cp_tag }}/bin/pip /usr/bin/pip &&
            cd /io &&
            pip install --upgrade pip setuptools wheel auditwheel &&
            pip install torch==2.6.0 torchaudio &&
            pip install . &&
            python /io/setup.py bdist_wheel &&
            auditwheel repair \
                --exclude libc10_cuda.so \
                --exclude libcaffe2_nvrtc.so \
                --exclude libgomp-a34b3233.so.1 \
                --exclude libtorch_cpu.so \
                --exclude libtorch_cuda.so \
                --exclude libtorch_python.so \
                --exclude libc10.so \
                --exclude libcusparseLt-f80c68d1.so.0 \
                --exclude libshm.so \
                --exclude libtorch_cuda_linalg.so \
                --exclude libtorch_global_deps.so \
                --exclude libtorch.so \
                /io/dist/*.whl -w /io/wheelhouse/${{ matrix.python-version }}
            "

      - name: List wheel files
        run: du -h wheelhouse/${{ matrix.python-version }}/*

      - uses: actions/upload-artifact@v4
        with:
          name: linux-python-${{ matrix.python-version }}-wheels
          path: wheelhouse/${{ matrix.python-version }}/*.whl

  build-windows:
    strategy:
      max-parallel: 4
      matrix:
        platform: [windows-latest]
        python-version: ["3.10", "3.11"]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install locally
        run: |
          python -m pip install torch==2.6.0 torchaudio
          python -m pip install --upgrade pip==23.3.2
          python -m pip install wheel ninja

      - name: Install Deps
        run: python -m pip install .

      - name: Build the wheel
        run: python setup.py bdist_wheel -d dist/

      - run: du -h dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: windows-python-${{ matrix.python-version }}-wheels
          path: dist/*.whl